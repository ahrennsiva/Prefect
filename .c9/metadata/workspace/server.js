{"changed":true,"filter":false,"title":"server.js","tooltip":"/server.js","value":"/**\n * Module dependencies.\n */\n\nvar express = require('express');\nvar cookieParser = require('cookie-parser');\nvar logger = require('morgan');\nvar bodyParser = require('body-parser')\nvar session = require('express-session');\nvar methodOverride = require('method-override');\nvar favicon = require('serve-favicon');\nvar http = require('http');\nvar path = require('path');\nvar app = express();\nvar multipart = require('connect-multiparty');\nvar multipartMiddleware = multipart();\nvar request = require('request');\n\n// all environments\napp.set('port', process.env.PORT || 4200);\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\napp.use(logger('dev'));\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json())\napp.use(cookieParser());\napp.use(session({ secret: 'beta-engine', resave:false, saveUninitialized:false}));\napp.use(methodOverride());\n\n\n\n\nrequire('./api/routes/main.js')(app);\n\n\napp.use(express.static(path.join(__dirname, 'public')));\n\nhttp.createServer(app).listen(app.get('port'), function(){\n  console.log('Express server listening on port ' + app.get('port'));\n});","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"remove","lines":["//","// # SimpleServer","//","// A simple chat server using Socket.IO, Express, and Async.","//","var http = require('http');","var path = require('path');","","var async = require('async');","var socketio = require('socket.io');","var express = require('express');","","//","// ## SimpleServer `SimpleServer(obj)`","//","// Creates a new instance of SimpleServer with the following options:","//  * `port` - The HTTP port to listen on. If `process.env.PORT` is set, _it overrides this value_.","//","var router = express();","var server = http.createServer(router);","var io = socketio.listen(server);","","router.use(express.static(path.resolve(__dirname, 'client')));","var messages = [];","var sockets = [];","","io.on('connection', function (socket) {","    messages.forEach(function (data) {","      socket.emit('message', data);","    });","","    sockets.push(socket);","","    socket.on('disconnect', function () {","      sockets.splice(sockets.indexOf(socket), 1);","      updateRoster();","    });","","    socket.on('message', function (msg) {","      var text = String(msg || '');","","      if (!text)","        return;","","      socket.get('name', function (err, name) {","        var data = {","          name: name,","          text: text","        };","","        broadcast('message', data);","        messages.push(data);","      });","    });","","    socket.on('identify', function (name) {","      socket.set('name', String(name || 'Anonymous'), function (err) {","        updateRoster();","      });","    });","  });","","function updateRoster() {","  async.map(","    sockets,","    function (socket, callback) {","      socket.get('name', callback);","    },","    function (err, names) {","      broadcast('roster', names);","    }","  );","}","","function broadcast(event, data) {","  sockets.forEach(function (socket) {","    socket.emit(event, data);","  });","}","","server.listen(process.env.PORT || 3000, process.env.IP || \"0.0.0.0\", function(){","  var addr = server.address();","  console.log(\"Chat server listening at\", addr.address + \":\" + addr.port);","});",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":39,"column":3},"action":"insert","lines":["/**"," * Module dependencies."," */","","var express = require('express');","var cookieParser = require('cookie-parser');","var logger = require('morgan');","var bodyParser = require('body-parser')","var session = require('express-session');","var methodOverride = require('method-override');","var favicon = require('serve-favicon');","var http = require('http');","var path = require('path');","var app = express();","var multipart = require('connect-multiparty');","var multipartMiddleware = multipart();","var request = require('request');","","// all environments","app.set('port', process.env.PORT || 4200);","app.set('views', path.join(__dirname, 'views'));","app.set('view engine', 'jade');","app.use(logger('dev'));","app.use(bodyParser.urlencoded({ extended: false }))","app.use(bodyParser.json())","app.use(cookieParser());","app.use(session({ secret: 'beta-engine', resave:false, saveUninitialized:false}));","app.use(methodOverride());","","","","","require('./api/routes/main.js')(app);","","","app.use(express.static(path.join(__dirname, 'public')));","","http.createServer(app).listen(app.get('port'), function(){","  console.log('Express server listening on port ' + app.get('port'));","});"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":39,"column":3},"end":{"row":39,"column":3},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1442636052109}